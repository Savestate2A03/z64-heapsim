from sim import GameState, actors

possible_collectible_flags = [
    [],
    [0x12],
    [0x11],
    [0x12,0x11],
    
    [0x24],
    [0x24,0x12],
    [0x24,0x11],
    [0x24,0x12,0x11],
    [0x25],
    [0x25,0x12],
    [0x25,0x11],
    [0x25,0x12,0x11],
    [0x26],
    [0x26,0x12],
    [0x26,0x11],
    [0x26,0x12,0x11],
    [0x27],
    [0x27,0x12],
    [0x27,0x11],
    [0x27,0x12,0x11],
    
    [0x24,0x25],
    [0x24,0x25,0x12],
    [0x24,0x25,0x11],
    [0x24,0x25,0x12,0x11],
    [0x24,0x26],
    [0x24,0x26,0x12],
    [0x24,0x26,0x11],
    [0x24,0x26,0x12,0x11],
    [0x24,0x27],
    [0x24,0x27,0x12],
    [0x24,0x27,0x11],
    [0x24,0x27,0x12,0x11],
    [0x25,0x26],
    [0x25,0x26,0x12],
    [0x25,0x26,0x11],
    [0x25,0x26,0x12,0x11],
    [0x25,0x27],
    [0x25,0x27,0x12],
    [0x25,0x27,0x11],
    [0x25,0x27,0x12,0x11],
    [0x26,0x27],
    [0x26,0x27,0x12],
    [0x26,0x27,0x11],
    [0x26,0x27,0x12,0x11],
    
    [0x24,0x25,0x26],
    [0x24,0x25,0x26,0x12],
    [0x24,0x25,0x26,0x11],
    [0x24,0x25,0x26,0x12,0x11],
    [0x24,0x25,0x27],
    [0x24,0x25,0x27,0x12],
    [0x24,0x25,0x27,0x11],
    [0x24,0x25,0x27,0x12,0x11],
    [0x24,0x26,0x27],
    [0x24,0x26,0x27,0x12],
    [0x24,0x26,0x27,0x11],
    [0x24,0x26,0x27,0x12,0x11],
    [0x25,0x26,0x27],
    [0x25,0x26,0x27,0x12],
    [0x25,0x26,0x27,0x11],
    [0x25,0x26,0x27,0x12,0x11],
    
    [0x24,0x25,0x26,0x27],
    [0x24,0x25,0x26,0x27,0x12],
    [0x24,0x25,0x26,0x27,0x11],
    [0x24,0x25,0x26,0x27,0x12,0x11],
]
possible_switch_flags = [
    [0x1F],
    [0x13,0x1F],
    [0x14,0x1F],
    [0x15,0x1F],
    [0x16,0x1F],
    [0x13,0x14,0x1F],
    [0x13,0x15,0x1F],
    [0x13,0x16,0x1F],
    [0x14,0x15,0x1F],
    [0x14,0x16,0x1F],
    [0x15,0x16,0x1F],
    [0x13,0x14,0x15,0x1F],
    [0x13,0x14,0x16,0x1F],
    [0x13,0x15,0x16,0x1F],
    [0x14,0x15,0x16,0x1F],
    [0x13,0x14,0x15,0x16,0x1F],
    
    [0x20,0x1F],
    [0x20,0x13,0x1F],
    [0x20,0x14,0x1F],
    [0x20,0x15,0x1F],
    [0x20,0x16,0x1F],
    [0x20,0x13,0x14,0x1F],
    [0x20,0x13,0x15,0x1F],
    [0x20,0x13,0x16,0x1F],
    [0x20,0x14,0x15,0x1F],
    [0x20,0x14,0x16,0x1F],
    [0x20,0x15,0x16,0x1F],
    [0x20,0x13,0x14,0x15,0x1F],
    [0x20,0x13,0x14,0x16,0x1F],
    [0x20,0x13,0x15,0x16,0x1F],
    [0x20,0x14,0x15,0x16,0x1F],
    [0x20,0x13,0x14,0x15,0x16,0x1F],
    
    [0x23,0x1F],
    [0x23,0x13,0x1F],
    [0x23,0x14,0x1F],
    [0x23,0x15,0x1F],
    [0x23,0x16,0x1F],
    [0x23,0x13,0x14,0x1F],
    [0x23,0x13,0x15,0x1F],
    [0x23,0x13,0x16,0x1F],
    [0x23,0x14,0x15,0x1F],
    [0x23,0x14,0x16,0x1F],
    [0x23,0x15,0x16,0x1F],
    [0x23,0x13,0x14,0x15,0x1F],
    [0x23,0x13,0x14,0x16,0x1F],
    [0x23,0x13,0x15,0x16,0x1F],
    [0x23,0x14,0x15,0x16,0x1F],
    [0x23,0x13,0x14,0x15,0x16,0x1F],
    
    [0x20,0x23,0x1F],
    [0x20,0x23,0x13,0x1F],
    [0x20,0x23,0x14,0x1F],
    [0x20,0x23,0x15,0x1F],
    [0x20,0x23,0x16,0x1F],
    [0x20,0x23,0x13,0x14,0x1F],
    [0x20,0x23,0x13,0x15,0x1F],
    [0x20,0x23,0x13,0x16,0x1F],
    [0x20,0x23,0x14,0x15,0x1F],
    [0x20,0x23,0x14,0x16,0x1F],
    [0x20,0x23,0x15,0x16,0x1F],
    [0x20,0x23,0x13,0x14,0x15,0x1F],
    [0x20,0x23,0x13,0x14,0x16,0x1F],
    [0x20,0x23,0x13,0x15,0x16,0x1F],
    [0x20,0x23,0x14,0x15,0x16,0x1F],
    [0x20,0x23,0x13,0x14,0x15,0x16,0x1F],
]

possible_load_before_rocks = [
    [],
    [actors.En_Fish],
    
    [actors.En_Bom_Chu],
    [actors.En_Bom_Chu,actors.En_Fish],
    
    [actors.En_Bom_Chu,actors.En_Bom_Chu],
    [actors.En_Bom_Chu,actors.En_Bom_Chu,actors.En_Fish],
    
    [actors.En_Bom_Chu,actors.En_Bom_Chu,actors.En_Bom_Chu],
    [actors.En_Bom_Chu,actors.En_Bom_Chu,actors.En_Bom_Chu,actors.En_Fish],
]

possible_load_before_rocks = [[actors.En_Fish]]

outfile=open('kokiri.txt','w')

for collectible_flags in possible_collectible_flags:
 for switch_flags in possible_switch_flags:

  if len(collectible_flags) + len(switch_flags) > 5:
      continue
  
  for load_before_rocks in possible_load_before_rocks:

    new_collectible_flags = [x for x in collectible_flags if x < 0x20]
    new_switch_flags = [x for x in switch_flags if x < 0x20]

    state = GameState('OoT', 'OoT-N-1.2', {'lullaby':False, 'saria':False, 'bombchu':True, 'bomb':False, 'bottle':True, 'clearedRooms':[], 'beanPlanted':False, 'collectibleFlags':new_collectible_flags, 'switchFlags':new_switch_flags})

    state.loadScene(sceneId=0x55, setupId=0, roomId=0)
    state.flags['collectibleFlags'] = collectible_flags
    state.flags['switchFlags'] = switch_flags
    for node in state.heap():
        state.initFunction(node)

    state.changeRoom(2)
    state.changeRoom(0)

    heapmanip_actors = []
    for actorId in load_before_rocks:
        heapmanip_actors.append(state.allocActor(actorId, rooms=[0]))
    for i in range(8):
        state.allocActor(actors.En_Ishi, rooms=[0])

    for actor in heapmanip_actors:
        state.dealloc(actor.addr)

    srmAddrs = []

    for node in state.heap():
        if node.actorId == actors.En_Ishi:
            #print(node)
            srmAddr = node.addr + state.headerSize + 0xB4
            srmAddrs.append(srmAddr)
            #print(hex(srmAddr))

    state.changeRoom(1)
    state.changeRoom(0)

    state.allocActor(actors.En_Fish, rooms=[0])
    fishOvlAddr = state.actors[actors.En_Fish]['loadedOverlay']+state.headerSize
    for node in state.heap():
        if node.actorId and state.actors[node.actorId]['drawPtr'] > 0 and 'loadedOverlay' in state.actors[node.actorId]:
            drawAddr = node.addr + state.headerSize + 0x134
            if drawAddr in srmAddrs :
                s = '%x %08x %X %s %s %s %s' % (drawAddr, state.actors[node.actorId]['loadedOverlay'], fishOvlAddr, node, collectible_flags, switch_flags, load_before_rocks)
                print(s)
                outfile.write(s+'\n')

outfile.close()
#print(state)
